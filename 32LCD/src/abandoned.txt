/*u8g2.clearBuffer();
u8g2.setFont(u8g2_font_open_iconic_all_2x_t);
u8g2.drawGlyph(53, 24, 0);
u8g2.sendBuffer();*/
// esp_sleep_enable_timer_wakeup(1000000 * 15); // 5分钟后唤醒
/*int i = 64, j = 4;
void lcd();
void lcd()
{

  while (i < 280)
  {
    ++i;
    u8g2.setFont(u8g2_font_wqy12_t_gb2312b);
    u8g2.setCursor(0, 30);
    u8g2.printf("%2d", i);
    u8g2.sendBuffer();
    break;
  }
  if (i <= 280)
  {
    u8g2.clearBuffer();
    // u8g2.setFont(u8g2_font_siji_t_6x10);
    u8g2.setFont(u8g2_font_open_iconic_all_2x_t);
    u8g2.drawGlyph(7, 24, i);
    u8g2.drawGlyph(30, 24, i + 1);
    u8g2.drawGlyph(53, 24, i + 2);
    u8g2.drawGlyph(76, 24, i + 3);
    u8g2.drawGlyph(99, 24, i + 4);
    u8g2.drawRFrame(j, 6, 22, 20, 3);
    u8g2.setFontDirection(0);
    j += 23;
    if (j >= 119)
    {
      j = 4;
      i += 5;
    }
    if (i >= 280)
      i = 64;

    // digitalWrite(2, j % 2);
  }

  delay(750);
}*/

// void drawicon(int, int, int);
// 图标
/////////////////////////////////////////
/*void drawicon(int x, int y, int a)
{
  u8g2.setFont(u8g2_font_open_iconic_all_2x_t); // 设定字体
  u8g2.clearBuffer();
  u8g2.drawGlyph(x, y, a);
  u8g2.sendBuffer();
}*/

/*
 */
/*int h = 0, mi = 0, s = 0; // 时分秒
char h_str[3], mi_str[3], s_str[3];
int y = 0, mo = 0, d = 0; // 年月日
char y_str[5], mo_str[3], d_str[3];
int week = 0; // 星期
char week_str[2];*/
/*u8g2.clearBuffer();
u8g2.setFont(u8g2_font_open_iconic_all_2x_t);
u8g2.drawGlyph(53, 24, 184);
u8g2.sendBuffer();*/
/*strcpy(s_str, u8x8_u8toa(s, 2));
strcpy(mi_str, u8x8_u8toa(mi, 2));
strcpy(h_str, u8x8_u8toa(h, 2));
strcpy(y_str, u8x8_u8toa(y, 4));
strcpy(mo_str, u8x8_u8toa(mo, 2));
strcpy(d_str, u8x8_u8toa(d, 2));
strcpy(week_str, u8x8_u8toa(week, 1));
// week[0] = 65;
Serial.println(week);
u8g2.clearBuffer();
u8g2.setFont(u8g2_font_logisoso16_tn);
u8g2.firstPage();
do
{
  // u8g2.drawStr(24, 16, y_str);
  // u8g2.drawStr(49, 16, ".");
  u8g2.drawStr(20, 16, mo_str);
  u8g2.drawStr(48, 16, ".");
  u8g2.drawStr(60, 16, d_str);
  u8g2.drawStr(100, 16, week_str);

  u8g2.drawStr(0, 32, h_str);
  u8g2.drawStr(28, 32, ":");
  u8g2.drawStr(40, 32, mi_str);
  u8g2.drawStr(68, 32, ":");
  u8g2.drawStr(80, 32, s_str);
  // Serial.printf("%s",y_str);
} while (u8g2.nextPage());*/

/*
void cpause(int *, int *, int *);
void cpause(int *h, int *m, int *s)
{
  int a = 0;
  while (!button())
  {
    u8g2.clearBuffer();
    switch (a)
    {
    case 0:
      joystick(&a, &*h);
      *h = (*h + 100) % 100;
      break;
    case 1:
      joystick(&a, &*m);
      *m = (*m + 60) % 60;
      break;
    case 2:
      joystick(&a, &*s);
      *s = (*s + 60) % 60;
      break;
    }
    a = (a + 3) % 3;
    u8g2.drawBox(29 + 23 * a, 4, 17, 4);
    u8g2.drawBox(29 + 23 * a, 22, 17, 4);
    u8g2.setFont(u8g2_font_helvB12_tf);
    u8g2.setCursor(29, 21);
    u8g2.printf("%02d:%02d:%02d", *h, *m, *s);
    u8g2.setFont(u8g2_font_wqy12_t_gb2312b);
    u8g2.setCursor(0, 8);
    u8g2.printf("%d", a + 1);
    u8g2.sendBuffer();
  }
}
*/

/*u8g2.clearBuffer();
u8g2.setFont(u8g2_font_wqy12_t_gb2312b);
u8g2.setCursor(30, 19);
u8g2.printf("WIFI 卫星");
u8g2.setCursor(90, 30);
u8g2.printf("返回");*/

/*#define H_I 2
#define W_I 5*/
/*  lab();
     gps();settings();power();*/
/*int button()
{
static bool bu_st = 1;
delay(5);
if (digitalRead(BU) && !bu_st)
{
bu_st = digitalRead(BU);
return 1;
}
else
{
bu_st = digitalRead(BU);
return 0;
}
}*/
/*int joysw()
{

  static bool sw_st = 1;
  // static int a = 0;
  // Serial.println(analogRead(13));
  delay(5);
  if (digitalRead(SW) && !sw_st)
  {
    // digitalWrite(2, 0);
    // ++a;
    sw_st = 1;
    // Serial.println(a);
    return 1;
  }
  else // if (!digitalRead(SW) || !sw_st)
  {
    sw_st = digitalRead(SW);
    // digitalWrite(2, 1);
    return 0;
  }
}*/

/*gpio_pad_select_gpio(GPIO_NUM_0);
gpio_set_direction(GPIO_NUM_0, GPIO_MODE_INPUT);
gpio_set_pull_mode(GPIO_NUM_0, GPIO_PULLUP_ONLY);
gpio_pad_select_gpio(GPIO_NUM_13);
gpio_set_direction(GPIO_NUM_13, GPIO_MODE_INPUT);
gpio_set_pull_mode(GPIO_NUM_13, GPIO_PULLUP_ONLY);*/
// test();
// Serial.printf("Home\n");
// if (joysw() || button())
// menu();
// power();
/*u8g2.clearBuffer();
u8g2.setFont(u8g2_font_helvB12_tf);
u8g2.setCursor(14, 14);
u8g2.printf("%04d.%02d.%02d %d\n", Yea, Mon, Day, Wee);
u8g2.setCursor(29, 30);
u8g2.printf("%02d:%02d:%02d\n", Hou, Min, Sec);

u8g2.sendBuffer();*/
